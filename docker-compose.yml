version: '3.8'

services:
  redis:
    image: redis:alpine
    container_name: gitfix-redis
    ports:
      - '6380:6379'
    volumes:
      - redis_data:/data
    networks:
      - gitfix-net

  db:
    image: postgres:15-alpine
    container_name: gitfix-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5433:5432'
    networks:
      - gitfix-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  daemon:
    build:
      context: .
      dockerfile: Dockerfile.node
    container_name: gitfix-daemon
    command: npm run daemon
    volumes:
      - ./logs:/usr/src/app/logs
      - /tmp/git-processor:/tmp/git-processor
    env_file:
      - .env
    environment:
      - GITHUB_BOT_USERNAME=gitfixio[bot]
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    networks:
      - gitfix-net

  worker:
    build:
      context: .
      dockerfile: Dockerfile.node
    container_name: gitfix-worker
    command: npm run worker
    volumes:
      - ./logs:/usr/src/app/logs
      - ./repos:/usr/src/app/repos
      - /tmp/git-processor:/tmp/git-processor
      - ~/.claude:/root/.claude
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/claude-logs:/tmp/claude-logs
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    networks:
      - gitfix-net

  web-ui:
    build:
      context: ./gitfix-ui
      dockerfile: Dockerfile
    container_name: gitfix-web-ui
    ports:
      - '5173:5173'
    environment:
      - VITE_API_URL=http://dashboard-api:4000
    networks:
      - gitfix-net

  dashboard-api:
    build:
      context: .
      dockerfile: Dockerfile.node
    container_name: gitfix-dashboard-api
    command: sh -c "cd /usr/src/app/packages/dashboard && node server.js"
    ports:
      - '4000:4000'
    volumes:
      - ~/.claude:/root/.claude:ro
      - /tmp/claude-logs:/tmp/claude-logs:ro
    env_file:
      - .env
    environment:
      - CONFIG_REPO_PATH=/tmp/config_repo
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    networks:
      - gitfix-net

networks:
  gitfix-net:
    driver: bridge

volumes:
  redis_data:
  postgres_data: